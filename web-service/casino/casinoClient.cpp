/* casinoClient.cpp
   Generated by gSOAP 2.8.21 from casino.h

Copyright(C) 2000-2014, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#if defined(__BORLANDC__)
#pragma option push -w-8060
#pragma option push -w-8004
#endif
#include "casinoH.h"

namespace casino {

SOAP_SOURCE_STAMP("@(#) casinoClient.cpp ver 2.8.21 2015-04-03 04:05:35 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__validar_USCOREcasino(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__validar_USCOREcasino *ns1__validar_USCOREcasino_, ns1__validar_USCOREcasinoResponse &ns1__validar_USCOREcasinoResponse_)
{	struct __ns1__validar_USCOREcasino soap_tmp___ns1__validar_USCOREcasino;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ssodes.usm.cl:80/Ws_casino/Ws_Principal";
	if (soap_action == NULL)
		soap_action = "http://Principal/Ws_Principal/validar_casinoRequest";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__validar_USCOREcasino.ns1__validar_USCOREcasino_ = ns1__validar_USCOREcasino_;
	soap_set_version(soap, 1); /* SOAP1.1 */
	soap_serializeheader(soap);
	soap_serialize___ns1__validar_USCOREcasino(soap, &soap_tmp___ns1__validar_USCOREcasino);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__validar_USCOREcasino(soap, &soap_tmp___ns1__validar_USCOREcasino, "-ns1:validar_casino", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__validar_USCOREcasino(soap, &soap_tmp___ns1__validar_USCOREcasino, "-ns1:validar_casino", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__validar_USCOREcasinoResponse_)
		return soap_closesock(soap);
	ns1__validar_USCOREcasinoResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__validar_USCOREcasinoResponse_.soap_get(soap, "ns1:validar_casinoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__Transacciones(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__Transacciones *ns1__Transacciones_, ns1__TransaccionesResponse &ns1__TransaccionesResponse_)
{	struct __ns1__Transacciones soap_tmp___ns1__Transacciones;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://ssodes.usm.cl:80/Ws_casino/Ws_Principal";
	if (soap_action == NULL)
		soap_action = "http://Principal/Ws_Principal/TransaccionesRequest";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ns1__Transacciones.ns1__Transacciones_ = ns1__Transacciones_;
	soap_set_version(soap, 1); /* SOAP1.1 */
	soap_serializeheader(soap);
	soap_serialize___ns1__Transacciones(soap, &soap_tmp___ns1__Transacciones);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__Transacciones(soap, &soap_tmp___ns1__Transacciones, "-ns1:Transacciones", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__Transacciones(soap, &soap_tmp___ns1__Transacciones, "-ns1:Transacciones", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__TransaccionesResponse_)
		return soap_closesock(soap);
	ns1__TransaccionesResponse_.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__TransaccionesResponse_.soap_get(soap, "ns1:TransaccionesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

} // namespace casino


#if defined(__BORLANDC__)
#pragma option pop
#pragma option pop
#endif

/* End of casinoClient.cpp */
